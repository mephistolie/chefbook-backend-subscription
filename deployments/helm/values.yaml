nameOverride: ""
fullnameOverride: ""

image:
  container: chefbook-backend-subscription-service
  registry: ""
  pullPolicy: IfNotPresent
  tag: ""
imagePullSecrets: [ ]

config:
  develop: false
  # Leave empty for stdout only
  logsPath: ""

  google:
    packageName: "com.chefbook"
    productIdPremium: premium
    productIdMaximum: maximum

  postgres:
    host: ""
    port: 5432
    dbName: chefbook-subscription

  rabbitmq:
    name: ""
    namespace: ""
    port: 5672
    vhost: ""

  smtp:
    host: smtp.gmail.com
    port: 465
    email: ""
    sendAttempts: 3

services:
  auth:
    name: chefbook-backend-auth-service
    namespace: ""
    port: 8080

secrets:
  google:
    name: google-secrets
    credentialsRef: credentials
  firebase:
    name: firebase-secrets
    credentialsRef: credentials
  postgres:
    name: postgres-secrets
    userRef: user
    passwordRef: password
  rabbitmq:
    name: rabbitmq-secrets
    userRef: user
    passwordRef: password
  smtp:
    name: smtp-secrets
    passwordRef: password

service:
  type: ClusterIP
  port: 8080

replicaCount: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

podAnnotations: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

resources: { }

nodeSelector: { }

tolerations: [ ]

affinity: { }
